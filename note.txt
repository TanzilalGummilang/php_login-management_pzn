# Controller {
  ## menerima request dari user dan menyampaikan ke model dan service
  ## lalu mengembalikan response ke user dgn tampilan dari view 
}

# Domain = representasi dari table di database
# Repository = semua aksi yg berhubungan dgn database

# Service = semua bisnis logic
# Model = data value parameter dan return value dari Service (bisa juga disebut Data Transfer Object (DTO))

# UserController {
  ## function register = untuk tampilan awal registrasi
  ## function postRegister = aksi register (perlu service dan model)
}

# SessionRepository {
  ## langkah-langkah {
    1. Domain {
      - buat Domain representasi dari session
    }
    2. SessionRepository {
      - create/insert data session
      - delete session (setelah logout)
      - cek session, select sesssion berdasarkan id
      - delete semua session utk unittest
      - buat connection ke database dan constructornya
    }
    3. buat unit test nya
  }
}

# SessionService {
  ## mengikuti format session {
    - setelah login session dibuat
    - setelah logout session dihapus
    - kadang2 kita ingin tau session saat ini
  }
  ## jadi yg akan dibuat adalah {
    - create/buat session
    - destroy/hapus session
    - current = session saat ini
    - constructor utk SessionRepository
    - pake cookie utk simpan data session id (session php agak bermasalah (materi php web))
    - unit test nya, bikin dummy setcookie (error cannot modify header)
  }
  ## setelah delete cookie dari database, cookie perlu diubah lagi, cookie tidak otomatis hilang
  ## pada unit test, function setUp(), function deleteAll() urutannya jgn ketuker, alasannya belum ketemu masih dipelajari logic nya hehe..
}